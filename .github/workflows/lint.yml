# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Lint

on:
    push:
        branches: [ master ]
    pull_request:

jobs:
    pre_commit:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: [ '3.10', '3.11', '3.12' ]

        steps:
            -   uses: actions/checkout@v4

            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Run pre-commit
                uses: pre-commit/action@v3.0.1

    unit_tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: [ '3.10', '3.11', '3.12', '3.13' ]

        services:
            minio:
                image: bitnami/minio:latest
                env:
                    MINIO_ROOT_USER: minioadmin
                    MINIO_ROOT_PASSWORD: minioadmin
                ports: [ '9000:9000' ]

        steps:
            -   uses: actions/checkout@v4

            -   name: Cache poetry
                uses: actions/cache@v3
                with:
                    path: |
                        ~/.cache/pypoetry
                        ~/.cache/pip
                    key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip poetry
                    poetry config virtualenvs.create false
                    poetry install --no-interaction

            -   name: Test with pytest
                env:
                    AWS_ENDPOINT_URL: "http://localhost:9000"
                run: |
                    pytest --no-cov-on-fail --cov async_storages/ --cov tests/
